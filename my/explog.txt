***实验1：gedgnn.txt
    日期：
    数据集：AIDS，测试图对140*100
    备注：
***实验3：result_GedGNN_AIDS_2403291148.txt
    日期：24-03-29 11:48
    数据集：AIDS，测试图对140*420
    备注：完整的测试集进行测试
***实验8：result_GedGNN_AIDS_2404130954.txt
    日期：24-04-13 09:54
    数据集：AIDS，测试图对140*100
    备注：GEDGNN模型，去掉BCELOSS，与实验7做对比
实验19：result_MyGNN2_AIDS_2405061035.txt
    日期：24-05-06 10:35
    数据集：AIDS，测试图对140*100
    备注：embedding -> Cross -> A_match
          embedding -> LRL+GS -> P 
          A_match*P -> GEDLoss
***实验20：result_MyGNN2_AIDS_2405071045.txt
    日期：24-05-07 10:45
    数据集：AIDS，测试图对140*100
    备注：根据IOSNET模型的LRL操作，在实验19的基础上，对填充操作进行了修改，在得到嵌入后在进行填充，并对A_match进行mask操作
            消除填充操作产生的影响。
***实验24：result_GedGNN_AIDS_2405131527.txt
    日期：24-05-13 15:27
    数据集：AIDS，测试图对140*100
    备注：去掉BCELOSS的GEDGNN模型25轮
**实验33：result_GedGNN_AIDS_2407031103.txt
    日期：24-07-03 11:03
    数据集：AIDS，测试图对140*100
    备注：GEDGNN去掉BCELoss和NTN模块
**实验34：result_GedGNN_AIDS_2407031559.txt
    日期：24-07-03 15:59
    数据集：AIDS，测试图对140*100
    备注：重做实验8(去掉BCELoss)
**实验35：result_MyGNN2_AIDS_2407041345.txt
    日期：24-07-04 13:45
    数据集：AIDS，测试图对140*100
    备注：重新进行一次实验20
实验37：result_MyGNN3_AIDS_2407191711
    日期：24-07-19 17:11
    数据集：AIDS，测试图对140*100
    说明：节点嵌入通过LRL处理节点嵌入, 通过Cross生成Cost矩阵, 用Cost矩阵通过gs得到Alignment矩阵 
**实验38：result_MyGNN3_AIDS_2407231500
    日期：24-07-23 15:00
    数据集：AIDS，测试图对140*100
    参数：costMatrix(k=16)、LRL(hiddim=64)
    说明：在实验20的基础上，使用多层拼接的节点嵌入(128+64+32=224)
**实验39：result_MyGNN3_AIDS_2407251335
    日期：24-07-25 13:35
    数据集：AIDS，测试图对140*420
    参数：costMatrix(k=16)、LRL(hiddim=64)
    说明：在实验20的基础上，使用完整的测试数据集

实验46：
    日期：24-08-16~26
    数据集：AIDS，测试图对140*100
    说明：在实验38的基础上进行参数调整，init_features是onehot向量初始化的维度、final_features是GNN-cat后嵌入经过线性变换的维度
lrl_hiddim   costMatrix-k   init_features   final_features    轮次     mae      acc     rho     tau     p10       备注
64           16             \                \,224            20/25   0.840    0.377   0.869   0.739   0.717   2407231500,参数过多不稳定
------------------------------------------------------------------------------------------------------------------------------------------
64           8              \                32               19/25   0.686    0.444   0.891   0.767   0.734   2408161036    
64           16             \                32               24/25   0.727    0.413   0.890   0.766   0.733   2408201025    
64           4              \                32               25/25   0.701    0.430   0.892   0.769   0.736   2408211753
------------------------------------------------------------------------------------------------------------------------------------------     
64           8              32               32               25/25   0.662    0.444   0.897   0.776   0.754   2408221915  *
64           8              128              32               25/25   0.660    0.453   0.899   0.779   0.731   2408231221  
                                                 baseline             0.773    0.397   0.876   0.751   0.716

实验47：
    日期：24-08-26~27
    数据集：Linux，测试图对200*100
    说明：在实验2408221915的基础上进行, 只修改了数据集和参数
lrl_hiddim   costMatrix-k   init_features   final_features    轮次     mae      acc     rho     tau     p10       备注
64           8              32              32                24/25    0.196    0.836   0.957   0.873   0.952     2408261121
64           8              8               32                24/25    0.070    0.935   0.964   0.884   0.980     2408271648  *
                                                            baseline   0.094    0.917   0.963   0.903   0.962     
实验48：
    日期：24-08-29
    数据集：IMDB-large，测试图对300*100
    说明：IMDB-large
lrl_hiddim   costMatrix-k   init_features   final_features    轮次     mae      acc     rho     tau     p10  
64           8              8               32                25/25   2.84     0.303   0.799   0.67    0.85     IMDB_2408291221
                                                            baseline  1.398    0.269   0.629   0.500   0.696
实验49：
    日期：24-08-30
    数据集：IMDB-small，测试图对148*100
    说明：IMDB-small
lrl_hiddim   costMatrix-k   init_features   final_features    轮次     mae      acc     rho     tau     p10  
64           8              8               32                25/25   4.041    0.064   0.877   0.771   0.98     IMDB_2408301536
64           8              16              32                25/25   0.756    0.493   0.953   0.888   0.979    IMDB_2409021629
64           8              16              32                17/25   4.721    0.474   0.831   0.705   0.956    IMDB_2409031708
64           8              4               32         
                                                            baseline  0.249    0.84    0.972   0.952   0.975
实验50：GOTSim
    日期：24-09-06
    数据集：AIDS，测试图对140*100
轮次     mae     acc     rho     tau     p10 
15/15   0.794   0.387   0.862   0.729   0.671   AIDS_2409061026
13/15   0.592   0.501   0.928   0.840   0.890   Linux_2409061721
7/15    5.364   0.165   0.695   0.592   0.752   IMDB_2409090931
5/15    6.259   0.175   0.660   0.571   0.732   IMDB_2409100935


实验50：Readout-mean
    日期：24-09-07
轮次     mae     acc     rho     tau     p10 
15/15   1.024   0.321   0.773   0.631   0.573   AIDS_2409071105
15/15   1.069   0.346   0.767   0.670   0.798   Linux_2409091554
8/10    8.421   0.087   0.597   0.512   0.496   IMDB_2409110944

实验51：Readout-max
    日期：24-09-07
轮次     mae     acc     rho     tau     p10
3/10    1.716   0.183   0.684   0.544   0.502   AIDS_2409091646
7/10    4.207   0.060   0.369   0.313   0.317   Linux_2409101536
7/10    8.769   0.078   0.558   0.488   0.621   IMDB_2409101706

实验52：result_MyGNN3_AIDS_2409111207
    说明：实验配置跟2408221915一样，精简了一下代码，看看是否会产生影响
    
实验53：result_MyGNN3_AIDS_2409120912
    说明：在2408221915的基础上，增加了Cost矩阵中节点增删代价。图2的节点嵌入取平均与图2个节点相乘计算删除的代价，然后拼接到Cost矩阵上。
    mae     acc     rho     tau     p10
    0.723   0.418   0.886   0.76    0.728

实验54：result_MyGNN3_AIDS_2409131009
    数据集：AIDS，测试图对140*100
    参数：lrl_hiddim   costMatrix-k   init_features   final_features
            64           8              32               32
    说明：在2408221915的基础上，增加了Cost矩阵中节点增删代价。图2的节点嵌入取平均拼接到图1的节点嵌入下面，然后通过Cross模块。
    mae     acc     rho     tau     p10
    0.663   0.444   0.898   0.776   0.736   AIDS_2409131009
    0.058   0.945   0.964   0.884   0.980   Linux_2409231631
    3.125   0.406   0.759   0.631   0.846   IMDB_2409250946

实验55：result_MyGNN3_AIDS_2409201142
        result_MyGNN3_AIDS_2409202052
    说明：在2409131009的基础上，将Cross Matrix Module 改成 Simple Matrix Module
    mae     acc     rho     tau     p10
    0.687   0.428   0.894   0.771   0.746

实验56：result_MyGNN3_AIDS_2409230947
    说明：在2409131009的基础上，去掉gumbel-sinkhorn，直接使用LRL得到的相似度矩阵
    mae     acc     rho     tau     p10
    0.655   0.454   0.904   0.785   0.752

实验57：result_MyGNN3_AIDS_2410141501
    说明：在2409131009的基础上，去掉lrl-gs，节点嵌入仅做简单的相乘得到相似度矩阵
    mae     acc     rho     tau     p10
    0.641   0.459   0.906   0.788   0.766

实验58：result_MyGNN3_AIDS_2410150950
    说明：在2409131009的基础上，去掉增删代价，通过Cross模块后，填充0向量。（之前的是在节点向量上填充，然后通过Cross模块）
    mae     acc     rho     tau     p10
    0.665   0.445   0.899   0.778   0.748

实验59：
    说明：对2409131009进行实验，测试其稳定性
    mae     acc     rho     tau     p10
    0.705   0.427   0.885   0.759   0.719    2410171020
    0.637   0.459   0.901   0.781   0.759    2410180955

实验：result_MyGNN3_AIDS_2410180955
        result_SimGNN_AIDS_2410211731
        result_GOTSim_AIDS_2410221020
    说明：rank实验需要


       2  3  4  5  6  7  8  9  10   均值
0.8    1  2  3  4  4  5  6  7  8    0.714
0.7    1  2  2  3  4  4  5  6  7    0.611
0.6    1  1  2  3  3  4  4  5  6    0.518
0.5    1  1  2  2  3  3  4  4  5    0.456
0.4    0  1  1  2  2  2  3  3  4    0.301

实验计划：

结论：
1、从节点相似度矩阵A_node和边相似度矩阵A_edge中通过自己的对齐算法(不可微)得到的对齐结果M，然后A_node*M去预测GED效果会很差
2、实验15(node)、16(edge)、18(node和edge)因为使用相同的方法可以进行对比
----------------------------------------

实验结果1：match_MyGNN_AIDS_2403210905.txt
    日期：24-03-21 09:05
    数据集：AIDS，测试图对140*100
    备注：保存测试时每个图对的实际对齐节点数量
        图1id，图2id，图1节点数，gt_ged, 图2节点数，实际节点对齐数量
实验结果2：sample_MyGNN_AIDS_2403201912.txt
    日期：24-03-20 19:12
    数据集：AIDS，测试图对140*420
    备注：每个batch的第一个图对的预测对齐结果和ground-truth
